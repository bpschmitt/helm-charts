### Overview ###
# The values-base.yaml file installs only the necessary components for installing the New Relic's Kubernetes integration and enabling the Kubernetes UIs.  These UIs include the Kubernetes Navigator, Cluster Overview dashboard, Kubenetes entity dashboards, and Kubernetes Events page.

### Global Settings ###

# All sub-charts inherit these configuration options.
# See the README for the common library for all available configuration options.
# https://github.com/newrelic/helm-charts/blob/master/library/common-library
global:
  # -- The cluster name for the Kubernetes cluster.
  cluster: "example-cluster"
  # -- Name of the Secret object where the license key is stored
  customSecretName: "new-relic-secret"
  # -- Key in the Secret object where the license key is stored
  customSecretLicenseKey: "new-relic-license-key"

### Sub-Chart Settings ###

# Enables the newrelic-infrastructure chart: https://github.com/newrelic/nri-kubernetes/tree/main/charts/newrelic-infrastructure
# Description: Collects Kubernetes metrics from Kube State Metrics, Kubelet, and cAdvisor from within the cluster. All available configuration options can be found in the newrelic-infrastructure values file.
# Values File URL: https://github.com/newrelic/nri-kubernetes/blob/main/charts/newrelic-infrastructure/values.yaml
newrelic-infrastructure:
  enabled: true

# Enables the Kube State Metrics chart: https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics
# Description: Kube State Metrics (KSM) is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.  It is a critical component to New Relic's Kubernetes observability offering.
# Additional Notes: This is mandatory if `newrelic-infrastructure.enabled` is set to `true` and the user does not provide its own instance of KSM version >=1.8 and <=2.0. Note, kube-state-metrics v2+ disables labels/annotations metrics by default. You can enable the target labels/annotations metrics to be monitored by using the metricLabelsAllowlist/metricAnnotationsAllowList options described [here](https://github.com/prometheus-community/helm-charts/blob/159cd8e4fb89b8b107dcc100287504bb91bf30e0/charts/kube-state-metrics/values.yaml#L281-L297) in your Kubernetes clusters.
# Values File URL: https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-state-metrics/values.yaml
kube-state-metrics:
  enabled: true

# Enables the nri-kube-events chart: https://github.com/newrelic/nri-kube-events/blob/main/charts/nri-kube-events
# Description: Sends Kubernetes Events from the cluster to New Relic
# Values File URL: https://github.com/newrelic/nri-kube-events/blob/main/charts/nri-kube-events/values.yaml
nri-kube-events:
  enabled: true

# Enables the nri-metadata-injection chart: https://github.com/newrelic/k8s-metadata-injection/tree/main/charts/nri-metadata-injection
# Description: Creates a MutatingAdmissionWebhook that adds New Relic specific ENV vars to newly created Pods in the cluster.  Enables correlation between APM and Infra.
# Values File URL: https://github.com/newrelic/k8s-metadata-injection/blob/main/charts/nri-metadata-injection/values.yaml
nri-metadata-injection:
  enabled: true

newrelic-logging:
  enabled: true
  fluentBit:
    logLevel: "info"
    path: "/var/log/containers/*.log"
    linuxMountPath: /var
    windowsPath: "C:\\var\\log\\containers\\*.log"
    db: "/var/log/flb_kube.db"
    windowsDb: "C:\\var\\log\\flb_kube.db"
    criEnabled: true
    k8sBufferSize: "32k"
    k8sLoggingExclude: "Off"
    retryLimit: 5
    sendMetrics: false
    extraEnv: []
    # extraEnv:
    # - name: HTTPS_PROXY
    #   value: http://example.com:3128
    # - name: METADATA_NAME
    #   valueFrom:
    #     fieldRef:
    #       fieldPath: metadata.name

    # Indicates how fluent-bit database is persisted
    persistence:
      # Define the persistent mode for fluent-bit db, allowed options are `hostPath` (default), `none`, `persistentVolume`.
      # - `hostPath` will use hostPath to store the db file on the node disk.
      # - `none` will disable the fluent-bit db file, this could cause log duplication or data loss in case fluent-bit gets restarted.
      # - `persistentVolume` will use a ReadWriteMany persistent volume to store the db file. This will override `fluentBit.db` path and use `/db/${NODE_NAME}-fb.db` file instead.
      mode: "hostPath"

      # In case persistence.mode is set to persistentVolume this will be needed
      persistentVolume:
        # The storage class should allow ReadWriteMany mode
        storageClass:
        # Volume and claim size.
        size: 10Gi
        # If dynamicProvisioning is enabled the chart will create only the PersistentVolumeClaim
        dynamicProvisioning: true
        # If an existingVolume is provided, we'll use it instead creating a new one
        existingVolume:
        # If an existingVolumeClaim is provided, we'll use it instead creating a new one
        existingVolumeClaim:
        # In case you need to add annotations to the created volume or claim
        annotations:
          volume: {}
          claim: {}
        # In case you need to specify any other option to your volume or claim
        extra:
          volume:
          #  nfs:
          #    path: /tmp/
          #    server: 1.1.1.1
          claim: {}


    # New Relic default configuration for fluent-bit.conf (service, inputs, filters, outputs)
    # and parsers.conf (parsers). The configuration below is not configured for lowDataMode and will
    # send all attributes.  If custom configuration is required, update these variables.
    config:
      # Note that Prometheus metric collection needs the HTTP server to be online at port 2020 (see fluentBit.config.metricInstrumentation)
      service: |
        [SERVICE]
            Flush         1
            Log_Level     ${LOG_LEVEL}
            Daemon        off
            Parsers_File  parsers.conf
            HTTP_Server   On
            HTTP_Listen   0.0.0.0
            HTTP_Port     2020

      inputs: |
        [INPUT]
            Name              tail
            Alias             pod-logs-tailer
            Tag               kube.*
            Path              ${PATH}
            multiline.parser  ${LOG_PARSER}
            DB                ${FB_DB}
            Mem_Buf_Limit     7MB
            Skip_Long_Lines   On
            Refresh_Interval  10

  #    extraInputs: |
  #      [INPUT]
  #          Name   dummy
  #          Tag    dummy.log

      filters: |
        [FILTER]
            Name                kubernetes
            Alias               kubernetes-enricher
            Match               kube.*
            # We need the full DNS suffix as Windows only supports resolving names with this suffix
            # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
            Kube_URL            https://kubernetes.default.svc.cluster.local:443
            Buffer_Size         ${K8S_BUFFER_SIZE}
            K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}

        [FILTER]
            Name           record_modifier
            Alias          node-attributes-enricher
            Match          *
            Record         cluster_name "${CLUSTER_NAME}"

  #    extraFilters: |
  #      [FILTER]
  #          Name   grep
  #          Match  *
  #          Exclude log lvl=debug*

      lowDataModeFilters: |
        [FILTER]
            Name           kubernetes
            Match          kube.*
            Alias          kubernetes-enricher
            # We need the full DNS suffix as Windows only supports resolving names with this suffix
            # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
            Kube_URL       https://kubernetes.default.svc.cluster.local:443
            Buffer_Size    ${K8S_BUFFER_SIZE}
            K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
            Labels         Off
            Annotations    Off

        [FILTER]
            Name           nest
            Match          *
            Alias          kubernetes-attribute-lifter
            Operation      lift
            Nested_under   kubernetes

        [FILTER]
            Name           record_modifier
            Match          *
            Alias          node-attributes-enricher-filter
            Record         cluster_name "${CLUSTER_NAME}"
            Allowlist_key  container_name
            Allowlist_key  namespace_name
            Allowlist_key  pod_name
            Allowlist_key  stream
            Allowlist_key  message
            Allowlist_key  log

      outputs: |
        [OUTPUT]
            Name           newrelic
            Match          *
            Alias          newrelic-logs-forwarder
            licenseKey     ${LICENSE_KEY}
            endpoint       ${ENDPOINT}
            lowDataMode    ${LOW_DATA_MODE}
            sendMetrics    ${SEND_OUTPUT_PLUGIN_METRICS}
            Retry_Limit    ${RETRY_LIMIT}

  #    extraOutputs: |
  #      [OUTPUT]
  #          Name null
  #          Match *

  #    parsers: |
  #      [PARSER]
  #          Name         my_custom_parser
  #          Format       json
  #          Time_Key     time
  #          Time_Format  %Y-%m-%dT%H:%M:%S.%L
  #          Time_Keep    On
      metricInstrumentation: |
        [INPUT]
            name prometheus_scrape
            Alias fb-metrics-collector
            host 127.0.0.1
            port 2020
            tag fb_metrics
            metrics_path /api/v2/metrics/prometheus
            scrape_interval 10s

        [OUTPUT]
            Name                 prometheus_remote_write
            Match                fb_metrics
            Alias                fb-metrics-forwarder
            Host                 ${METRICS_HOST}
            Port                 443
            Uri                  /prometheus/v1/write?prometheus_server=${CLUSTER_NAME}
            Header               Authorization Bearer ${LICENSE_KEY}
            Tls                  On
            # Windows pods using prometheus_remote_write currently have issues if TLS verify is On
            Tls.verify           Off
            # User-defined labels
            add_label            app fluent-bit
            add_label            cluster_name "${CLUSTER_NAME}"
            add_label            hostname ${HOSTNAME}
            add_label            node_name ${NODE_NAME}
            add_label            source kubernetes